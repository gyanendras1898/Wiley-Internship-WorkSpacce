package day8.tictactok;

public class TickTakTok {
	
	private static boolean tick=true;
	private static boolean tak=false;
	private static boolean tok=false;
	
	synchronized public void showTick() {
		if(tak==true || tok==true) {
			try {
				wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		System.out.println(Thread.currentThread().getName()+" : Tick");
		tick=false;
		tak=true;
		notifyAll();
	}
	
	synchronized public void showTak() {
		if(tick==true || tok==true) {
			try {
				wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		System.out.println(Thread.currentThread().getName()+" : Tak");
		tak=false;
		tok=true;
		notifyAll();
	}
	
	synchronized public void showTok() {
		if(tak==true || tick==true) {
			try {
				wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		System.out.println(Thread.currentThread().getName()+" : Tok");
		tok=false;
		tick=true;
		notifyAll();
	}


}
