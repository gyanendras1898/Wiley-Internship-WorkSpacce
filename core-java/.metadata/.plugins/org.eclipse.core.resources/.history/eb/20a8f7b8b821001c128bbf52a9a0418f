package day8.tictactok;

public class TickTakTok {
	
	private static boolean tick=true;
	private static boolean tak=false;
	private static boolean tok=false;
	
	synchronized public void showTick() {
		if(tick==true) {
			System.out.println(Thread.currentThread().getName());
			tick=false;
			tak=true;
			notifyAll();
		}
		else {
			try {
				wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}		
	}
	
	synchronized public void showTak() {
		if(tak==true) {
			System.out.println(Thread.currentThread().getName());
			tak=false;
			tok=true;
			notifyAll();
		}
		else {
			try {
				wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		
	}
	
	synchronized public void showTok() {
		if(tok==true) {
			System.out.println(Thread.currentThread().getName());
			tok=false;
			tick=true;
			notifyAll();
		}
		else {
			try {
				wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		
	}


}
