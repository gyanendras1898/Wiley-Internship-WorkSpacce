package com.piyush.persistence;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.sql.DataSource;

import org.springframework.jdbc.core.JdbcTemplate;

import com.piyush.bean.Employee;
import com.piyush.helper.EmployeeRowMapper;

public class EmployeeDaoImpl implements EmployeeDao {
	
//	private DataSource dataSource;
	
	private JdbcTemplate jdbcTemplate;
	
//	public void setDataSource(DataSource dataSource) {
//		this.dataSource = dataSource;
//	}

	public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate = jdbcTemplate;
	}

	@Override
	public ArrayList<Employee> getAllRecords()throws SQLException{
//		Class.forName("com.mysql.cj.jdbc.Driver");
//		Connection connection=DriverManager.getConnection("jdbc:mysql://localhost:3306/employeedb", "root", "admin");
		
//		Connection connection=dataSource.getConnection();
//		
//		PreparedStatement preparedStatement=connection.prepareStatement("SELECT * FROM employees");
//		ResultSet resultSet=preparedStatement.executeQuery();
//		
//		ArrayList<Employee> employees=new ArrayList<Employee>();
//		//3.Process Result
//		while(resultSet.next()) {
//			int empId=resultSet.getInt("ID");
//			String na=resultSet.getString("NAME");
//			String deptt=resultSet.getString("DEPARTMENT");
//			String desig=resultSet.getString("DESIGNATION");
//			int sal=resultSet.getInt("SALARY");
//			Employee employee=new Employee(empId, na, deptt, desig, sal);
//			employees.add(employee);
//		}
//		connection.close();
		return null;
	}

	@Override
	public boolean insertData(Employee employee) throws SQLException {
//		Class.forName("com.mysql.cj.jdbc.Driver");
//		Connection connection=DriverManager.getConnection("jdbc:mysql://localhost:3306/employeedb", "root", "admin");
//		Connection connection=dataSource.getConnection();
//		PreparedStatement preparedStatement=connection.prepareStatement(
//		int rows = jdbcTemplate.update(query, employee.getEmpId(), employee.getEmpName(), employee.getEmpDepartment(),
//				employee.getEmpDesignation(), employee.getEmpSalary());
//		if (rows > 0)
//			return true;
//		return false;
		
		String query="INSERT INTO employees VALUES(?,?,?,?,?)";
		
		int rows=jdbcTemplate.update(query, employee.getEmpId(),employee.getEmpName()
				,employee.getEmpDepartment(),employee.getEmpDesignation(),employee.getEmpSalary());
		
		if (rows > 0)
			return true;
		return false;
	}

	@Override
	public boolean deleteData(int empId) throws SQLException {
//		Class.forName("com.mysql.cj.jdbc.Driver");
//		Connection connection=DriverManager.getConnection("jdbc:mysql://localhost:3306/employeedb", "root", "admin");
//		Connection connection=dataSource.getConnection();
		
		String query="DELETE FROM employees WHERE id=?";
		int rows=jdbcTemplate.update(query, empId);
		
		if (rows > 0)
			return true;
		return false;
	}

	@Override
	public boolean updateSalary(int empId, int salary) throws  SQLException {
		boolean flag=false;
//		Class.forName("com.mysql.cj.jdbc.Driver");
//		Connection connection=DriverManager.getConnection("jdbc:mysql://localhost:3306/employeedb", "root", "admin");
//		Connection connection=dataSource.getConnection();
		String query="UPDATE employees SET salary=? WHERE id=?";
		
		int rows=jdbcTemplate.update(query,salary, empId);
		
		if (rows > 0)
			return true;
		return false;
	}
	
	

	@Override
	public Employee searchRecord(int empId) throws SQLException {
//		Class.forName("com.mysql.cj.jdbc.Driver");
//		Connection connection=DriverManager.getConnection("jdbc:mysql://localhost:3306/employeedb", "root", "admin");
//		Connection connection=dataSource.getConnection();
//		String query="SELECT * FROM employees WHERE id="+empId;
//		Employee employee=null;
//		PreparedStatement preparedStatement=connection.prepareStatement(query);
//		ResultSet resultSet=preparedStatement.executeQuery();
//		while(resultSet.next()) {
//		int id=resultSet.getInt("ID");
//		String na=resultSet.getString("NAME");
//		String deptt=resultSet.getString("DEPARTMENT");
//		String desig=resultSet.getString("DESIGNATION");
//		int sal=resultSet.getInt("SALARY");
//		employee=new Employee(id, na, deptt, desig, sal);
//		}
//		connection.close();
		String query="SELECT * FROM employees WHERE id=?";
		
		Employee employee=jdbcTemplate.queryForObject(query, new EmployeeRowMapper(), empId);
		
		return employee;
	}

}
